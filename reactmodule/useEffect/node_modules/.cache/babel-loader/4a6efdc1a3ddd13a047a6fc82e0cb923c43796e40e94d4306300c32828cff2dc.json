{"ast":null,"code":"var _jsxFileName = \"/Users/rajatsoni/Desktop/Devon/Sharpener/reactmodule/useEffect/src/components/Login/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = props => {\n  _s();\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredPassword, setEnteredPassword] = useState(\"\");\n\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  // const [emailIsValid, setEmailIsValid] = useState();\n\n  const [formIsValid, setFormIsValid] = useState(false);\n  useEffect(() => {\n    setFormIsValid(enteredEmail.includes(\"@\") && enteredPassword.trim().length > 6);\n  }, [enteredEmail, enteredPassword]);\n  const emailChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n  const passwordChangeHandler = event => {\n    setEnteredPassword(event.target.value);\n  };\n\n  // const validateEmailHandler = () => {\n  //   setEmailIsValid(enteredEmail.includes(\"@\"));\n  // };\n\n  // const validatePasswordHandler = () => {\n  //   setPasswordIsValid(enteredPassword.trim().length > 6);\n  // };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(enteredEmail, enteredPassword);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailIsValid === false ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: enteredEmail,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordIsValid === false ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: enteredPassword,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"k0ypcwsEjqXSFW3ggPjNbct0Ovk=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","Card","classes","Button","jsxDEV","_jsxDEV","Login","props","_s","enteredEmail","setEnteredEmail","enteredPassword","setEnteredPassword","formIsValid","setFormIsValid","includes","trim","length","emailChangeHandler","event","target","value","passwordChangeHandler","submitHandler","preventDefault","onLogin","className","login","children","onSubmit","control","emailIsValid","invalid","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","validateEmailHandler","passwordIsValid","validatePasswordHandler","actions","btn","disabled","_c","$RefreshReg$"],"sources":["/Users/rajatsoni/Desktop/Devon/Sharpener/reactmodule/useEffect/src/components/Login/Login.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\n\nconst Login = (props) => {\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredPassword, setEnteredPassword] = useState(\"\");\n\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  // const [emailIsValid, setEmailIsValid] = useState();\n\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  useEffect(() => {\n    setFormIsValid(\n      enteredEmail.includes(\"@\") && enteredPassword.trim().length > 6\n    );\n  }, [enteredEmail, enteredPassword]);\n\n  const emailChangeHandler = (event) => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const passwordChangeHandler = (event) => {\n    setEnteredPassword(event.target.value);\n  };\n\n  // const validateEmailHandler = () => {\n  //   setEmailIsValid(enteredEmail.includes(\"@\"));\n  // };\n\n  // const validatePasswordHandler = () => {\n  //   setPasswordIsValid(enteredPassword.trim().length > 6);\n  // };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(enteredEmail, enteredPassword);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailIsValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={enteredEmail}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordIsValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={enteredPassword}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}