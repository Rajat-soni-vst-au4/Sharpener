{"ast":null,"code":"var _jsxFileName = \"/Users/rajatsoni/Desktop/Devon/Sharpener/reactmodule/useEffect/src/components/Store/Auth.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  isLoggedIn: false,\n  onlogout: () => {}\n});\nexport const AuthContextProvider = props => {\n  const loginHandler = (email, password, college) => {\n    localStorage.setItem(\"isLoggedIn\", \"1\");\n    setIsLoggedIn(true);\n  };\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    onlogout: logoutHandler,\n    islogin: loginHandler,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 12\n  }, this);\n};\n_c = AuthContextProvider;\nexport default AuthContext;\nconst [isLoggedIn, setIsLoggedIn] = useState(false);\nuseEffect(() => {\n  const userInfo = localStorage.getItem(\"isLoggedIn\");\n  if (userInfo === \"1\") {\n    setIsLoggedIn(true);\n  }\n}, []);\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","AuthContext","createContext","isLoggedIn","onlogout","AuthContextProvider","props","loginHandler","email","password","college","localStorage","setItem","setIsLoggedIn","logoutHandler","Provider","islogin","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","useState","useEffect","userInfo","getItem","$RefreshReg$"],"sources":["/Users/rajatsoni/Desktop/Devon/Sharpener/reactmodule/useEffect/src/components/Store/Auth.js"],"sourcesContent":["import React from 'react'\n\nconst AuthContext = React.createContext({\n    isLoggedIn : false,\n    onlogout: () => {}\n})\n\nexport const AuthContextProvider = (props) => {\n\n\n    const loginHandler = (email, password, college) => {\n\n        localStorage.setItem(\"isLoggedIn\", \"1\");\n    \n        setIsLoggedIn(true);\n      };\n      const logoutHandler = () => {\n        setIsLoggedIn(false);\n      };\n    return <AuthContext.Provider onlogout={logoutHandler} islogin={loginHandler}>{props.children}</AuthContext.Provider>\n}\nexport default AuthContext\n\nconst [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    const userInfo = localStorage.getItem(\"isLoggedIn\");\n    if (userInfo === \"1\") {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  \n\n  "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,WAAW,gBAAGH,KAAK,CAACI,aAAa,CAAC;EACpCC,UAAU,EAAG,KAAK;EAClBC,QAAQ,EAAEA,CAAA,KAAM,CAAC;AACrB,CAAC,CAAC;AAEF,OAAO,MAAMC,mBAAmB,GAAIC,KAAK,IAAK;EAG1C,MAAMC,YAAY,GAAGA,CAACC,KAAK,EAAEC,QAAQ,EAAEC,OAAO,KAAK;IAE/CC,YAAY,CAACC,OAAO,CAAC,YAAY,EAAE,GAAG,CAAC;IAEvCC,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EACD,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1BD,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EACH,oBAAOb,OAAA,CAACC,WAAW,CAACc,QAAQ;IAACX,QAAQ,EAAEU,aAAc;IAACE,OAAO,EAAET,YAAa;IAAAU,QAAA,EAAEX,KAAK,CAACW;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AACxH,CAAC;AAAAC,EAAA,GAbYjB,mBAAmB;AAchC,eAAeJ,WAAW;AAE1B,MAAM,CAACE,UAAU,EAAEU,aAAa,CAAC,GAAGU,QAAQ,CAAC,KAAK,CAAC;AAEjDC,SAAS,CAAC,MAAM;EACd,MAAMC,QAAQ,GAAGd,YAAY,CAACe,OAAO,CAAC,YAAY,CAAC;EACnD,IAAID,QAAQ,KAAK,GAAG,EAAE;IACpBZ,aAAa,CAAC,IAAI,CAAC;EACrB;AACF,CAAC,EAAE,EAAE,CAAC;AAAC,IAAAS,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}